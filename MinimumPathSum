import java.util.Scanner;

public class MinimumPathSum {

    public static int miniPath(int arr[][])
    {
        if(arr.length==0||arr[0].length==0||arr==null)
        {
            return 0;
        }
        int m=arr.length;
        int n=arr[0].length;
        int dp[][]=new int[m][n];
        dp[0][0]=arr[0][0];
        for(int i=1;i<m;i++)
        {
            dp[i][0]=dp[i-1][0]+arr[i][0];
        }
        for(int j=1;j<n;j++)
        {
                dp[0][j]=dp[0][j-1]+arr[0][j];
        }
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                dp[i][j]=Math.min(dp[i-1][j],dp[i][j-1])+arr[i][j];
            }
        }
        return dp[m-1][n-1];
    }
    public static void main(String[]args)
    {
        Scanner sc =new Scanner(System.in);
        int m=sc.nextInt();
        int n=sc.nextInt();
        int arr[][]=new int[m][n];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
        System.out.println(miniPath(arr));
    }
}

